apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: kratos
  name: kratos
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kratos
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: kratos
    spec:
      containers:
        - args:
            - serve
            - -c
            - /etc/config/kratos/kratos.yml
            - --dev
          env:
            - name: LOG_LEVEL
              value: trace
          envFrom:
            - configMapRef:
                name: kratos-db-cm
          image: oryd/kratos:v0.6.0-alpha.2
          name: kratos
          ports:
            - containerPort: 4433
            - containerPort: 4434
          resources: {}
          volumeMounts:
            - mountPath: /etc/config/kratos
              name: config
      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            name: kratos-cm
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: kratos
  name: kratos
spec:
  type: ClusterIP
  ports:
    - name: "4433"
      port: 4433
      targetPort: 4433
    - name: "4434"
      port: 4434
      targetPort: 4434
  selector:
    io.kompose.service: kratos
status:
  loadBalancer: {}
